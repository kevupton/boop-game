{"version":3,"sources":["events/MousePositionEvent.ts","controllers/MouseController.ts","events/PlayerInitEvent.ts","view/PlayerBall.ts","controllers/PlayerController.ts","game.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["MousePositionEvent","_GameEvent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_ref","_ref2","_ref3","players","posX","posY","uuid","_players$uuid","diffX","x","diffY","y","total","Math","abs","percX","percY","defineProperty","GameEvent","MouseController","_GameController","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","currentX","currentY","countdown","_this2","window","addEventListener","clientX","clientY","delta","undefined","events","triggerLocalEvent","party","subscribe","GameController","PlayerInitEvent","state","color","PlayerBall","_ViewItem","gameState","viewState","ctx","player","params","beginPath","arc","PI","fillStyle","fill","ViewItem","PlayerController","randomColor","view","registerViewItem","game","GameEngine","initialViewState","socketConfig","host","rtcConfig","iceServers","urls","initialState","canvasWidth","canvasHeight","controllers","gameEngine","start","ReactiveXComponent","react_default","a","createElement","className","ref","node","appendChild","viewElement","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed0bfad3.chunk.js","sourcesContent":["import { GameEvent, ModificationMap } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface MouseData {\n  posX : number;\n  posY : number;\n  uuid : string;\n}\n\nconst SPEED = 60;\n\nexport class MousePositionEvent extends GameEvent<GameState, MouseData> {\n  protected calculateModifications (\n    { players } : GameState,\n    { posX, posY, uuid } : MouseData,\n  ) : ModificationMap<GameState> {\n    if (!players[uuid]) {\n      return {};\n    }\n\n    const { x, y } = players[uuid];\n\n    const diffX = posX - x;\n    const diffY = posY - y;\n    const total = Math.abs(diffX) + Math.abs(diffY);\n\n    if (total === 0) {\n      return {};\n    }\n\n    const percX = diffX / total;\n    const percY = diffY / total;\n\n    return {\n      ['players.' + uuid + '.x']: ['+', percX * SPEED],\n      ['players.' + uuid + '.y']: ['+', percY * SPEED],\n    };\n  }\n}\n","import { MousePositionEvent } from '../events/MousePositionEvent';\nimport { GameState } from '../game';\nimport { GameController } from '@kevupton/game-engine';\n\nconst INTERVAL = 300;\n\nexport class MouseController extends GameController<GameState> {\n\n  private currentX? : number;\n  private currentY? : number;\n\n  private countdown = 0;\n\n  public init () : void {\n    window.addEventListener('mousemove', ({ clientX, clientY }) => {\n      this.currentX = clientX;\n      this.currentY = clientY;\n    });\n  }\n\n  public loop (delta : number) : void {\n    this.countdown -= delta;\n\n    if (this.countdown > 0) {\n      return;\n    }\n\n    if (this.currentY === undefined || this.currentX === undefined) {\n      return;\n    }\n\n    this.events.triggerLocalEvent(new MousePositionEvent({\n      posX: this.currentX,\n      posY: this.currentY,\n      uuid: this.party.uuid,\n    })).subscribe();\n\n    this.countdown = INTERVAL;\n  }\n}\n","import { GameEvent, ModificationMap } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface PlayerData {\n  uuid : string;\n  color : string;\n}\n\nexport class PlayerInitEvent extends GameEvent<GameState, PlayerData> {\n  protected calculateModifications (\n    state : GameState,\n    { uuid, color } : PlayerData,\n  ) : ModificationMap<GameState> {\n    return {\n      ['players.' + uuid]: ['=', { x: 200, y: 200, color, }],\n    };\n  }\n}\n","import { ViewItem } from '@kevupton/game-engine';\nimport { GameState, ViewState } from '../game';\n\nexport interface PlayerBallParams {\n  uuid : string;\n}\n\nexport class PlayerBall extends ViewItem<GameState, ViewState, PlayerBallParams> {\n\n  public init (gameState : GameState, viewState : ViewState) {\n  }\n\n  public render (state : ViewState, ctx : CanvasRenderingContext2D) : void {\n    const player = state.players[this.params.uuid];\n    if (!player) {\n      return;\n    }\n\n    const x = this.x;\n\n    ctx.beginPath();\n    ctx.arc(x(player.x), x(player.y), 20, 0, 2 * Math.PI);\n    ctx.fillStyle = player.color;\n    ctx.fill();\n  }\n\n  public update ({ players } : GameState, viewState : ViewState, delta : number) : Partial<ViewState> | undefined {\n    return {\n      players,\n    };\n  }\n\n}\n","import { GameController } from '@kevupton/game-engine';\nimport { PlayerInitEvent } from '../events/PlayerInitEvent';\nimport { GameState } from '../game';\nimport randomColor from 'randomcolor';\nimport { PlayerBall } from '../view/PlayerBall';\n\nexport class PlayerController extends GameController<GameState> {\n\n  public init () : void {\n    this.events.triggerLocalEvent(new PlayerInitEvent( {\n      uuid: this.party.uuid,\n      color: randomColor(),\n    })).subscribe();\n\n    this.view.registerViewItem(new PlayerBall({ uuid: this.party.uuid }))\n  }\n\n  public loop (delta : number) : void {\n  }\n}\n","import { GameEngine } from '@kevupton/game-engine';\nimport { MouseController } from './controllers/MouseController';\nimport { PlayerController } from './controllers/PlayerController';\nimport { MousePositionEvent } from './events/MousePositionEvent';\nimport { PlayerInitEvent } from './events/PlayerInitEvent';\n\nexport interface GameState {\n  canvasWidth : number;\n  canvasHeight : number;\n  players : {\n    [key : string] : {\n      x : number;\n      y : number;\n      color : string;\n    }\n  }\n}\n\nexport interface ViewState {\n  players : {\n    [key : string] : {\n      x : number;\n      y : number;\n      color : string;\n    }\n  }\n}\n\nexport default new GameEngine<GameState, ViewState>({\n  initialViewState: {\n    players: {},\n  },\n  socketConfig: {\n    host: 'p2p.s1r.io',\n    rtcConfig: {\n      'iceServers': [\n        {'urls': 'stun:stun.stunprotocol.org:3478'},\n        {'urls': 'stun:stun.l.google.com:19302'},\n      ]\n    }\n  },\n  initialState: {\n    canvasWidth: 500,\n    canvasHeight: 500,\n    players: {},\n  },\n  controllers: [\n    MouseController,\n    PlayerController,\n  ],\n  events: [\n    MousePositionEvent,\n    PlayerInitEvent,\n  ],\n});\n\n\n","import React from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport './App.css';\nimport gameEngine from './game';\n\ngameEngine.start();\n\nexport default ReactiveXComponent()(() => {\n  return (\n    <div className=\"App\"\n         ref={ node => node && node.appendChild(gameEngine.viewElement) }\n    />\n  );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}