{"version":3,"sources":["events/MousePositionEvent.ts","events/MovementSyncEvent.ts","controllers/MovementController.ts","events/PlayerInitEvent.ts","view/PlayerBall.ts","controllers/PlayerController.ts","game.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["MousePositionEvent","_GameEvent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_ref","_ref2","_ref3","players","_ref2$mousePosition","mousePosition","mouseX","x","mouseY","y","uuid","_players$uuid$mousePo","defineProperty","GameEvent","MovementSyncEvent","_players$uuid$playerP","playerPosition","diffX","diffY","total","Math","abs","percX","percY","prevVector","vector","MovementController","_GameController","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","current","previous","countdown","_this2","window","addEventListener","clientX","clientY","delta","INTERVAL","events","triggerLocalEvent","party","subscribe","GameController","PlayerInitEvent","state","color","PlayerBall","_ViewItem","gameState","viewState","ctx","player","params","beginPath","arc","PI","fillStyle","fill","vPlayers","vPlayer","percentage","prevPlayerPosition","prevPercentage","min","objectSpread","ViewItem","PlayerController","keys","forEach","createPlayerBall","on","event","randomColor","view","registerViewItem","game","GameEngine","initialViewState","ticksPerSecond","framesPerSecond","initialState","canvasWidth","canvasHeight","controllers","socketConfig","host","rtcConfig","iceServers","urls","gameEngine","start","ReactiveXComponent","react_default","a","createElement","className","ref","node","appendChild","viewElement","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b73e44c6.chunk.js","sourcesContent":["import { GameEvent, ModificationMap, Vector } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface MouseData {\n  mousePosition : Vector;\n  uuid : string;\n}\n\nexport class MousePositionEvent extends GameEvent<GameState, MouseData> {\n  protected calculateModifications (\n    { players } : GameState,\n    { mousePosition: { x: mouseX, y: mouseY }, uuid } : MouseData,\n  ) : ModificationMap<GameState> {\n    if (!players[uuid]) {\n      return {};\n    }\n\n    const { x, y } = players[uuid].mousePosition;\n\n    return {\n      ['players.' + uuid + '.mousePosition.x']: ['+', mouseX - x],\n      ['players.' + uuid + '.mousePosition.y']: ['+', mouseY - y],\n    };\n  }\n}\n","import { GameEvent, ModificationMap, Vector } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface MovementData {\n  uuid : string;\n}\n\nconst SPEED = 50;\n\nexport class MovementSyncEvent extends GameEvent<GameState, MovementData> {\n  protected calculateModifications (\n    { players } : GameState,\n    { uuid } : MovementData,\n  ) : ModificationMap<GameState> {\n    if (!players[uuid]) {\n      return {};\n    }\n\n    const { x, y } = players[uuid].playerPosition;\n    const { x : mouseX, y : mouseY } = players[uuid].mousePosition;\n\n    const diffX = mouseX - x;\n    const diffY = mouseY - y;\n    const total = Math.abs(diffX) + Math.abs(diffY);\n\n    if (total === 0) {\n      return {};\n    }\n\n    const percX = diffX / total;\n    const percY = diffY / total;\n\n    const prevVector = players[uuid].vector || {\n      x: 0,\n      y: 0,\n    };\n\n    const vector : Vector = {\n      x: percX * SPEED,\n      y: percY * SPEED,\n    };\n\n    return {\n      ['players.' + uuid + '.playerPosition.x']: ['+', prevVector.x],\n      ['players.' + uuid + '.playerPosition.y']: ['+', prevVector.y],\n      ['players.' + uuid + '.vector.x']: ['+', vector.x - prevVector.x],\n      ['players.' + uuid + '.vector.y']: ['+', vector.y - prevVector.y],\n    };\n  }\n}\n","import { GameController, Vector } from '@kevupton/game-engine';\nimport { MousePositionEvent } from '../events/MousePositionEvent';\nimport { MovementSyncEvent } from '../events/MovementSyncEvent';\nimport { GameState } from '../game';\n\nexport class MovementController extends GameController<GameState> {\n\n  static readonly INTERVAL = 300;\n\n  private current? : Vector;\n  private previous? : Vector;\n\n  private countdown = 0;\n\n  public init () : void {\n    window.addEventListener('mousemove', ({ clientX, clientY }) => {\n      this.current = {\n        x: clientX,\n        y: clientY,\n      };\n    });\n  }\n\n  public loop (delta : number) : void {\n    this.countdown -= delta;\n\n    if (this.countdown > 0) {\n      return;\n    }\n\n    this.countdown = MovementController.INTERVAL;\n\n\n    this.events.triggerLocalEvent(new MovementSyncEvent({\n      uuid: this.party.uuid,\n    })).subscribe();\n\n    if (!this.current ||\n      (this.previous &&\n        this.previous.x === this.current.x &&\n        this.previous.y === this.current.y)) {\n\n      return;\n    }\n\n\n    this.events.triggerLocalEvent(new MousePositionEvent({\n      mousePosition: this.current,\n      uuid: this.party.uuid,\n    })).subscribe();\n\n    this.previous = this.current;\n  }\n}\n","import { GameEvent, ModificationMap } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface PlayerData {\n  uuid : string;\n  color : string;\n}\n\nexport class PlayerInitEvent extends GameEvent<GameState, PlayerData> {\n  protected calculateModifications (\n    state : GameState,\n    { uuid, color } : PlayerData,\n  ) : ModificationMap<GameState> {\n    return {\n      ['players.' + uuid]: ['=', {\n        playerPosition: { x: 200, y: 200 },\n        mousePosition: { x: 200, y: 200 },\n        vector: { x: 0, y: 0 },\n        color,\n      }],\n    };\n  }\n}\n","import { ViewItem } from '@kevupton/game-engine';\nimport { MovementController } from '../controllers/MovementController';\nimport { GameState, ViewState } from '../game';\n\nexport interface PlayerBallParams {\n  uuid : string;\n}\n\nexport class PlayerBall extends ViewItem<GameState, ViewState, PlayerBallParams> {\n\n  public init (gameState : GameState, viewState : ViewState) {\n  }\n\n  public render (state : ViewState, ctx : CanvasRenderingContext2D) : void {\n    const player = state.players[this.params.uuid];\n    if (!player) {\n      return;\n    }\n\n    const x = this.x;\n\n    ctx.beginPath();\n    ctx.arc(x(player.x), x(player.y), 20, 0, 2 * Math.PI);\n    ctx.fillStyle = player.color;\n    ctx.fill();\n  }\n\n  public update (\n    { players } : GameState,\n    { players: vPlayers } : ViewState,\n    delta : number,\n  ) : Partial<ViewState> | void {\n    const player = players[this.params.uuid];\n\n    if (!player || !player.vector) {\n      return;\n    }\n\n    const vPlayer = vPlayers[this.params.uuid] || { percentage: 0, prevPlayerPosition: {} };\n\n    let prevPercentage = 0;\n    if (vPlayer.prevPlayerPosition.x === player.playerPosition.x &&\n      vPlayer.prevPlayerPosition.y === player.playerPosition.y) {\n      prevPercentage = vPlayer.percentage;\n    }\n\n    const percentage = Math.min(1, (delta / (200)) + prevPercentage);\n\n    // console.log(JSON.stringify(vPlayer), JSON.stringify(player));\n    // console.log(vPlayer.prevPlayerPosition.x === player.playerPosition.x &&\n    //   vPlayer.prevPlayerPosition.y === player.playerPosition.y);\n    // console.log(prevPercentage, percentage);\n\n    return {\n      players: {\n        ...vPlayers,\n        [this.params.uuid]: {\n          ...vPlayer,\n          x: player.playerPosition.x + (percentage * player.vector.x),\n          y: player.playerPosition.y + (percentage * player.vector.y),\n          prevPlayerPosition: { ...player.playerPosition },\n          percentage,\n          color: player.color,\n        },\n      },\n    };\n  }\n\n}\n","import { GameController } from '@kevupton/game-engine';\nimport randomColor from 'randomcolor';\nimport { PlayerInitEvent } from '../events/PlayerInitEvent';\nimport { GameState } from '../game';\nimport { PlayerBall } from '../view/PlayerBall';\n\nexport class PlayerController extends GameController<GameState> {\n\n  public init () : void {\n    Object.keys(this.state.players)\n      .forEach(uuid => this.createPlayerBall(uuid));\n\n    this.events.on(PlayerInitEvent).subscribe(event => {\n      this.createPlayerBall(event.params.uuid);\n    });\n\n    const color = randomColor();\n\n    this.events.triggerLocalEvent(new PlayerInitEvent({\n      uuid: this.party.uuid,\n      color: color instanceof Array ? color[0] : color,\n    })).subscribe();\n  }\n\n  public loop (delta : number) : void {\n  }\n\n  private createPlayerBall (uuid : string) {\n    this.view.registerViewItem(new PlayerBall({ uuid }));\n  }\n}\n","import { GameEngine, Vector } from '@kevupton/game-engine';\nimport { MovementController } from './controllers/MovementController';\nimport { PlayerController } from './controllers/PlayerController';\nimport { MousePositionEvent } from './events/MousePositionEvent';\nimport { MovementSyncEvent } from './events/MovementSyncEvent';\nimport { PlayerInitEvent } from './events/PlayerInitEvent';\n\nexport interface GameState {\n  canvasWidth : number;\n  canvasHeight : number;\n  players : {\n    [key : string] : {\n      playerPosition : Vector;\n      mousePosition : Vector;\n      vector : Vector;\n      color : string;\n    }\n  }\n}\n\nexport interface ViewState {\n  players : {\n    [key : string] : {\n      x : number;\n      y : number;\n      prevPlayerPosition : Vector;\n      percentage : number;\n      color : string;\n    }\n  }\n}\n\nexport default new GameEngine<GameState, ViewState>({\n  initialViewState: {\n    players: {},\n  },\n  ticksPerSecond: 30,\n  framesPerSecond: 60,\n  initialState: {\n    canvasWidth: 500,\n    canvasHeight: 500,\n    players: {},\n  },\n  controllers: [\n    MovementController,\n    PlayerController,\n  ],\n  events: [\n    MousePositionEvent,\n    PlayerInitEvent,\n    MovementSyncEvent,\n  ],\n  socketConfig: {\n    host: 'p2p.s1r.io',\n    rtcConfig: {\n      'iceServers': [\n        { 'urls': 'stun:stun.stunprotocol.org:3478' },\n        { 'urls': 'stun:stun.l.google.com:19302' },\n      ],\n    },\n  },\n});\n\n\n","import React from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport './App.css';\nimport gameEngine from './game';\n\ngameEngine.start();\n\nexport default ReactiveXComponent()(() => {\n  return (\n    <div className=\"App\"\n         ref={ node => node && node.appendChild(gameEngine.viewElement) }\n    />\n  );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}