{"version":3,"sources":["components/logger/LoggerContainer.tsx","components/logger/AvgLogger.tsx","util/date-format.ts","events/MousePositionEvent.ts","events/MovementUpdateEvent.ts","controllers/MovementController.ts","events/PlayerInitEvent.ts","view/PlayerBall.ts","controllers/PlayerController.ts","game.ts","components/logger/BasicLogger.tsx","components/logger/EventLogger.tsx","components/logger/ItemLogger.tsx","components/logger/ModificationQueueLogger.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoggerContainer","_ref","children","_ref$style","style","className","maxHeight","react","classNames","Object","objectSpread","Nb","ReactiveXComponent","nb","AvgLogger","_ref2","nb$","avgMax","_ref2$round","round","logger_LoggerContainer","keys","map","key","pipe","scan","_ref3","cur","count","avg","useCount","Math","min","newCount","_ref4","pow","dateFormat","date","oos","concat","slice","getHours","getMinutes","getSeconds","MousePositionEvent","_GameEvent","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","inherits","createClass","value","player","_ref$mousePosition","mousePosition","mouseX","x","mouseY","y","_player$mousePosition","mousePosition.x","mousePosition.y","undefined","params","uuid","GameEvent","MovementUpdateEvent","type","GameEventType","Local","players","_this2","delta","assign","toConsumableArray","id","createChanges","_","_player$playerPositio","playerPosition","diffX","diffY","total","abs","percX","percY","prevVector","vector","defineProperty","MovementController","_GameController","current","previous","countdown","window","addEventListener","clientX","clientY","events","trigger","INTERVAL","GameController","PlayerInitEvent","state","color","PlayerBall","_ViewItem","gameState","viewState","ctx","beginPath","arc","PI","fillStyle","fill","vPlayer","prevPercentage","prevPlayerPosition","percentage","gameManager","ticksPerSecond","newX","newY","ViewItem","PlayerController","forEach","createPlayerBall","on$","subscribe","event","randomColor","party","view","registerViewItem","game","GameEngine","initialViewState","framesPerSecond","initialState","controllers","socketConfig","host","rtcConfig","iceServers","urls","logger","gameEngine","toType","message","Date","log","merge","info$","warning$","error$","debug$","acc","unshift","pop","onClick","console","toUpperCase","LogItem","_ref2$values","values","data","eventUuid","onMouseDown","EventLogger","keep","GameEventManager","EVENT_TRIGGER_LOG","item","styleColor","hljs","background","margin","_ref$item","default_highlight","language","JSON","stringify","queue","ModificationQueue","QUEUE_LOG","_ref$queue","index","request","avgPipes","filter","skip","Boolean","location","hostname","match","ReactDOM","render","react_default","a","createElement","ref","node","appendChild","viewElement","logger_BasicLogger","logger_EventLogger","logger_AvgLogger","FPS","FRAME_LOOP_LOG","TPS","TICK_LOOP_LOG","logger_ItemLogger","GameState","STATE_LOG","ModificationQueueLogger","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dc42c5a9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { CSSProperties, FC } from 'react';\nimport './Logger.scss';\n\ninterface LoggerContainerStyles {\n  style? : CSSProperties,\n  className? : string,\n  maxHeight? : string,\n}\n\nconst LoggerContainer : FC<LoggerContainerStyles> = ({ children, style = {}, className, maxHeight }) => {\n  return (<div className={ classNames('logger-container', className) } style={ {\n    ...style,\n    maxHeight,\n  } }>\n    { children }\n  </div>);\n};\n\nexport default LoggerContainer;\n\n","import * as React from 'react';\nimport { FC } from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport { Observable } from 'rxjs';\nimport { map, scan } from 'rxjs/operators';\nimport LoggerContainer from './LoggerContainer';\n\ninterface LoggerProps {\n  nb$ : {\n    [key : string] : Observable<number>;\n  };\n  avgMax : number;\n  round? : number;\n}\n\nconst Nb = ReactiveXComponent()<FC<{ nb : number }>>(({ nb }) => (<span>{ nb }</span>));\n\nconst AvgLogger : FC<LoggerProps> = ({ nb$, avgMax, round = 0 }) => {\n  return (<LoggerContainer className='avg-logger'>\n    { Object.keys(nb$).map(key => (\n      <div key={ key }>{ key }: <Nb nb={ nb$[key].pipe(\n        scan(({ count, avg }, cur) => {\n          const useCount = Math.min(avgMax - 1, count);\n          const sum      = useCount * avg + cur;\n          const newCount = useCount + 1;\n          const newAvg   = sum / newCount;\n\n          return {\n            count: newCount,\n            avg: newAvg,\n          };\n        }, { count: 0, avg: 0 }),\n        map(({ avg }) => avg),\n        map(avg => Math.round(Math.pow(10, round) * avg) / Math.pow(10, round)),\n      ) }/></div>\n    )) }\n  </LoggerContainer>);\n};\n\nexport default AvgLogger;\n","export function dateFormat (date : Date) {\n  const oos = (nb : number) => `00${ nb }`.slice(-2);\n  return oos(date.getHours()) + ':' + oos(date.getMinutes()) + ':' + oos(date.getSeconds());\n}\n","import { GameEvent, ModificationMap, Vector } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface MouseData {\n  mousePosition : Vector;\n  uuid : string;\n}\n\nexport class MousePositionEvent extends GameEvent<GameState['players']['uuid'], MouseData> {\n  readonly name = 'MousePositionEvent';\n\n  protected calculateModifications (\n    player : GameState['players']['uuid'],\n    { mousePosition: { x: mouseX, y: mouseY } } : MouseData,\n  ) : ModificationMap<GameState> {\n    if (!player) {\n      return {};\n    }\n\n    const { x, y } = player.mousePosition;\n\n    return {\n      'mousePosition.x': ['+', mouseX - x],\n      'mousePosition.y': ['+', mouseY - y],\n    };\n  }\n\n  protected getScope (extra = '') {\n    return `players.${ this.params.uuid }`;\n  }\n}\n","import { GameEvent, GameEventType, ModificationMap, Vector } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface MovementData {\n  uuid : string;\n  delta : number;\n}\n\nconst SPEED = 200;\n\n/*\n Movement sync to be done once every 500 ms.\n Not as an event.\n */\n\nexport class MovementUpdateEvent extends GameEvent<GameState, MovementData, GameState['players']> {\n  readonly name = 'MovementUpdateEvent';\n\n  public readonly type = GameEventType.Local;\n\n  protected calculateModifications (\n    players : GameState['players'],\n    { delta } : MovementData,\n  ) : ModificationMap<GameState> {\n\n    return Object.assign(\n      {},\n      ...Object.keys(players).map(id => this.createChanges(players, id, delta)),\n    );\n  }\n\n  private createChanges (players : GameState['players'], uuid : string, delta : number) {\n    const player = players[uuid];\n    const { _ } = this;\n\n    const { x, y }                 = player.playerPosition;\n    const { x: mouseX, y: mouseY } = player.mousePosition;\n\n    const diffX = mouseX - x;\n    const diffY = mouseY - y;\n    const total = Math.abs(diffX) + Math.abs(diffY);\n\n    if (total === 0) {\n      return {};\n    }\n\n    const percX = diffX / total;\n    const percY = diffY / total;\n\n    const prevVector = player.vector || {\n      x: 0,\n      y: 0,\n    };\n\n    const vector : Vector = {\n      x: percX * _(SPEED, delta),\n      y: percY * _(SPEED, delta),\n    };\n\n    return {\n      [`${uuid}.playerPosition.x`]: ['+', prevVector.x],\n      [`${uuid}.playerPosition.y`]: ['+', prevVector.y],\n      [`${uuid}.vector.x`]: ['+', vector.x - prevVector.x],\n      [`${uuid}.vector.y`]: ['+', vector.y - prevVector.y],\n    };\n  }\n\n  protected getScope (extra = '') : string {\n    return 'players';\n  }\n}\n","import { GameController, Vector } from '@kevupton/game-engine';\nimport { MousePositionEvent } from '../events/MousePositionEvent';\nimport { MovementUpdateEvent } from '../events/MovementUpdateEvent';\nimport { GameState } from '../game';\n\nexport class MovementController extends GameController<GameState> {\n\n  static readonly INTERVAL = 100;\n\n  private current? : Vector;\n  private previous? : Vector;\n\n  private countdown = 0;\n\n  public init () : void {\n    window.addEventListener('mousemove', ({ clientX, clientY }) => {\n      this.current = {\n        x: clientX,\n        y: clientY,\n      };\n    });\n  }\n\n  public loop (delta : number) : void {\n    this.countdown -= delta;\n\n    this.events.trigger(new MovementUpdateEvent({\n      uuid: this.uuid,\n      delta,\n    }));\n\n    if (this.countdown > 0) {\n      return;\n    }\n\n    this.countdown = MovementController.INTERVAL;\n\n    if (!this.current ||\n      (this.previous &&\n        this.previous.x === this.current.x &&\n        this.previous.y === this.current.y)) {\n\n      return;\n    }\n\n    this.events.trigger(new MousePositionEvent({\n      mousePosition: this.current,\n      uuid: this.uuid,\n    }));\n\n    this.previous = this.current;\n  }\n}\n","import { GameEvent, ModificationMap } from '@kevupton/game-engine';\nimport { GameState } from '../game';\n\ninterface PlayerData {\n  uuid : string;\n  color : string;\n}\n\nexport class PlayerInitEvent extends GameEvent<GameState, PlayerData> {\n  readonly name = 'PlayerInitEvent';\n\n  protected calculateModifications (\n    state : GameState,\n    { uuid, color } : PlayerData,\n  ) : ModificationMap<GameState> {\n    return {\n      ['players.' + uuid]: ['=', {\n        playerPosition: { x: 200, y: 200 },\n        mousePosition: { x: 200, y: 200 },\n        vector: { x: 0, y: 0 },\n        color,\n      }],\n    };\n  }\n}\n","import { ViewItem } from '@kevupton/game-engine';\nimport { GameState, ViewState, default as gameManager } from '../game';\n\nexport interface PlayerBallParams {\n  uuid : string;\n}\n\ntype ViewStateScope = ViewState['players']['uuid'] | undefined;\ntype StateScope = GameState['players']['uuid'] | undefined;\n\nexport class PlayerBall extends ViewItem<GameState, ViewState, PlayerBallParams, StateScope, ViewStateScope> {\n\n  public init (gameState : StateScope, viewState : ViewStateScope) {\n  }\n\n  public render (player : ViewStateScope, ctx : CanvasRenderingContext2D) : void {\n    if (!player) {\n      return;\n    }\n\n    const { _ } = this;\n\n    ctx.beginPath();\n    ctx.arc(_(player.x), _(player.y), 20, 0, 2 * Math.PI);\n    ctx.fillStyle = player.color;\n    ctx.fill();\n  }\n\n  public update (\n    player : StateScope,\n    vPlayer : ViewStateScope,\n    delta : number,\n  ) {\n    if (!player || !player.vector) {\n      return;\n    }\n\n    let prevPercentage = 0;\n    if (vPlayer &&\n      vPlayer.prevPlayerPosition.x === player.playerPosition.x &&\n      vPlayer.prevPlayerPosition.y === player.playerPosition.y) {\n      prevPercentage = vPlayer.percentage;\n    }\n\n    const percentage = Math.min(1, (delta / (1000 / gameManager.ticksPerSecond)) + prevPercentage);\n\n    const newX = player.playerPosition.x + percentage * player.vector.x;\n    const newY = player.playerPosition.y + percentage * player.vector.y;\n\n    /*\n      Only rerender if they are in a new position\n     */\n    if (!vPlayer || vPlayer.x !== newX || vPlayer.y !== newY) {\n      return {\n        ...vPlayer,\n        x: newX,\n        y: newY,\n        percentage,\n        color: player.color,\n        // this needs to use a different reference so that it does sync updates\n        prevPlayerPosition: { ...player.playerPosition },\n      };\n    }\n  }\n\n  public getStateScope () : string {\n    return `players.${ this.params.uuid }`;\n  }\n\n  public getViewStateScope () : string {\n    return `players.${ this.params.uuid }`;\n  }\n}\n","import { GameController } from '@kevupton/game-engine';\nimport randomColor from 'randomcolor';\nimport { PlayerInitEvent } from '../events/PlayerInitEvent';\nimport { GameState } from '../game';\nimport { PlayerBall } from '../view/PlayerBall';\n\nexport class PlayerController extends GameController<GameState> {\n\n  public init () : void {\n    Object.keys(this.state.players)\n      .forEach(uuid => this.createPlayerBall(uuid));\n\n    this.events.on$(PlayerInitEvent).subscribe(event => {\n      this.createPlayerBall(event.params.uuid);\n    });\n\n    const color = randomColor();\n\n    this.events.trigger(new PlayerInitEvent({\n      uuid: this.party.uuid,\n      color: color instanceof Array ? color[0] : color,\n    }));\n  }\n\n  public loop (delta : number) : void {\n  }\n\n  private createPlayerBall (uuid : string) {\n    this.view.registerViewItem(new PlayerBall({ uuid }));\n  }\n}\n","import { GameEngine, Vector } from '@kevupton/game-engine';\nimport { MovementController } from './controllers/MovementController';\nimport { PlayerController } from './controllers/PlayerController';\nimport { MousePositionEvent } from './events/MousePositionEvent';\nimport { MovementUpdateEvent } from './events/MovementUpdateEvent';\nimport { PlayerInitEvent } from './events/PlayerInitEvent';\n\nexport interface GameState {\n  players : {\n    [key : string] : {\n      playerPosition : Vector;\n      mousePosition : Vector;\n      vector : Vector;\n      color : string;\n    }\n  }\n}\n\nexport interface ViewState {\n  players : {\n    [key : string] : {\n      x : number;\n      y : number;\n      prevPlayerPosition : Vector;\n      percentage : number;\n      color : string;\n    }\n  }\n}\n\nexport default new GameEngine<GameState, ViewState>({\n  initialViewState: {\n    players: {},\n  },\n  ticksPerSecond: 0.5,\n  framesPerSecond: 60,\n  initialState: {\n    players: {},\n  },\n  controllers: [\n    MovementController,\n    PlayerController,\n  ],\n  events: [\n    MousePositionEvent,\n    PlayerInitEvent,\n    MovementUpdateEvent,\n  ],\n  socketConfig: {\n    host: 'p2p.s1r.io',\n    rtcConfig: {\n      'iceServers': [\n        { 'urls': 'stun:stun.stunprotocol.org:3478' },\n        { 'urls': 'stun:stun.l.google.com:19302' },\n      ],\n    },\n  },\n});\n\n\n","import * as React from 'react';\nimport { FC } from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport { merge } from 'rxjs/internal/observable/merge';\nimport { map, scan } from 'rxjs/operators';\nimport { dateFormat } from '../../util/date-format';\nimport LoggerContainer from './LoggerContainer';\nimport gameEngine from '../../game';\nconst logger = gameEngine.logger;\n\ninterface LogType {\n  message : string;\n  type : 'info' | 'error' | 'warning' | 'debug'\n  id : number;\n  date : Date;\n}\n\ninterface BasicLoggerProps {\n  log : LogType[];\n}\n\nconst BasicLogger : FC<BasicLoggerProps> = ({ log }) => (<LoggerContainer className='basic-logger'>\n  { log.map(({ type, message, id, date }) => (\n    <div key={id} className={type + ' basic-log-item'}\n         onClick={() => console.log({ type, message, id, date, })}>\n      <span>{ dateFormat(date) } </span>\n      <span>[{ type.toUpperCase() }] </span>\n      { message }\n    </div>\n  )) }\n</LoggerContainer>);\n\n\nlet id = 0;\nconst toType = (type : LogType['type']) => map<string, LogType>((message) => ({\n  type, message, id: ++id, date: new Date(),\n}));\n\n\nexport default ReactiveXComponent({\n  log: merge(\n    logger.info$.pipe(toType('info')),\n    logger.warning$.pipe(toType('warning')),\n    logger.error$.pipe(toType('error')),\n    logger.debug$.pipe(toType('debug')),\n  ).pipe(\n    scan<LogType, LogType[]>(((acc, value) => {\n      acc.unshift(value);\n      if (acc.length > 1000) {\n        acc.pop();\n      }\n      return acc;\n    }), []),\n  ),\n}, { log: [] })(BasicLogger);\n","import { GameEvent, GameEventManager } from '@kevupton/game-engine';\nimport * as React from 'react';\nimport { FC } from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport { scan } from 'rxjs/operators';\nimport gameEngine from '../../game';\nimport { dateFormat } from '../../util/date-format';\nimport LoggerContainer from './LoggerContainer';\n\ninterface LoggerProps {\n  keep : number;\n}\n\ninterface EventLogData {\n  event : GameEvent & {\n    name : string;\n  };\n  eventUuid : string;\n}\n\ninterface EventDetails extends EventLogData {\n  date : Date;\n}\n\nconst EventLogger : FC<LoggerProps> = ({ keep }) => {\n  return (<LoggerContainer>\n    <LogItem values={ gameEngine.logger.on$(GameEventManager.EVENT_TRIGGER_LOG).pipe(\n      scan<EventLogData, EventDetails[]>((acc, item) => {\n        acc.unshift({ ...item, date: new Date() });\n\n        if (acc.length > keep) {\n          acc.pop();\n        }\n\n        return acc;\n      }, []),\n    ) }/>\n  </LoggerContainer>);\n};\n\nconst LogItem = ReactiveXComponent()<FC<{ values : EventDetails[] }>>(({ values = [] }) => {\n  return (<div className='log-item'>\n    { values && values.map((data) => (\n      <div key={ data.eventUuid } onMouseDown={ () => console.log(data) } className='event-item'>\n        <span>{ dateFormat(data.date) } </span>\n        <span>{ data.event.name }</span>\n      </div>\n    )) }\n  </div>);\n});\n\nexport default EventLogger;\n","import * as React from 'react';\nimport { FC } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { obsidian as styleColor } from 'react-syntax-highlighter/dist/styles/hljs';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport LoggerContainer from './LoggerContainer';\n\ninterface LoggerProps {\n  item : any;\n}\n\nstyleColor.hljs.background = 'rgba(0,0,0,0.5)';\nstyleColor.hljs.margin = '-5px';\n\nconst ItemLogger : FC<LoggerProps> = ({ item = {} }) => {\n  return (<LoggerContainer maxHeight='none'>\n    <SyntaxHighlighter language='javascript' style={ styleColor }>\n      { JSON.stringify(item, undefined, 4) }\n    </SyntaxHighlighter>\n  </LoggerContainer>);\n};\n\nexport default ReactiveXComponent()(ItemLogger);\n","import { ModificationQueue, CurrentModifications } from '@kevupton/game-engine';\nimport * as React from 'react';\nimport { FC } from 'react';\nimport { ReactiveXComponent } from 'reactive-x-component';\nimport gameEngine from '../../game';\nimport LoggerContainer from './LoggerContainer';\n\ninterface LoggerProps {\n  queue : CurrentModifications<any>[];\n}\n\nexport default ReactiveXComponent({\n  queue: gameEngine.logger.on$(ModificationQueue.QUEUE_LOG),\n}, { queue: [] })<FC<LoggerProps>>(({ queue = [] }) => {\n  return (\n    <LoggerContainer className='modification-queue-log'>\n      <div className='log-item'>\n        { queue.map((item, index) => (\n          <div key={ index } onMouseDown={ () => console.log(item) } className='queue-item'>\n            { item.request.uuid }\n          </div>\n        )) }\n      </div>\n    </LoggerContainer>\n  );\n});\n","import { GameEngine, GameState } from '@kevupton/game-engine';\nimport React from 'react';\nimport { pipe } from 'rxjs';\nimport { filter } from 'rxjs/internal/operators/filter';\nimport { map, skip } from 'rxjs/operators';\nimport './App.css';\nimport AvgLogger from './components/logger/AvgLogger';\nimport BasicLogger from './components/logger/BasicLogger';\nimport EventLogger from './components/logger/EventLogger';\nimport ItemLogger from './components/logger/ItemLogger';\nimport ModificationQueueLogger from './components/logger/ModificationQueueLogger';\nimport gameEngine from './game';\n\nconst avgPipes = pipe(\n  map<any, number>(({ delta }) => delta),\n  filter((delta) => delta !== 0),\n  map(delta => 1000 / delta),\n  skip(1),\n);\n\nexport default () => {\n  return (\n    <div className=\"App\"\n         ref={ node => node && node.appendChild(gameEngine.viewElement) }>\n\n      <div className='top-left'>\n        <h6>Log:</h6>\n        <BasicLogger/>\n\n        <h6>Event Log:</h6>\n        <div className='event-log'>\n          <EventLogger keep={ 20 }/>\n        </div>\n      </div>\n\n      <div className='top-right fps'>\n        <AvgLogger nb$={ {\n          FPS: gameEngine.logger.on$(GameEngine.FRAME_LOOP_LOG).pipe(avgPipes),\n          TPS: gameEngine.logger.on$(GameEngine.TICK_LOOP_LOG).pipe(avgPipes),\n        } }\n                   avgMax={ 20 }\n                   round={ 1 }/>\n\n        <h6>Game State:</h6>\n        <ItemLogger item={ gameEngine.logger.on$(GameState.STATE_LOG) }/>\n      </div>\n\n      <div className='bottom-center'>\n        <h6>Modification Queue</h6>\n        <ModificationQueueLogger />\n      </div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}